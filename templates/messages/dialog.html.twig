{% extends 'base.html.twig' %}

{% block title %}
    {% if selectedUser %}
        Dialog with {{ selectedUser.username }}
    {% else %}
        Select a User to start a dialog
    {% endif %}
{% endblock %}

{% block body %}
    <div class="flex h-screen bg-gray-200 text-red-600">
        <div class="overflow-auto w-1/4 bg-white border-r p-5">
            <h1 class="text-lg font-bold mb-5 text-center">Select a User to start a dialog</h1>
            <ul id="user-list" class="space-y-5">
                {% for user in users %}
                    <li class="animate__animated animate__fadeIn"><a class="block py-2 px-6 hover:bg-gray-200 rounded-lg" href="{{ path('app_dialog', {id: user.id}) }}">{{ user.username }}</a></li>
                {% endfor %}
            </ul>
        </div>

        {% if selectedUser %}
            <div class="flex-1 flex flex-col">
                <h1 class="text-lg font-bold py-5 px-6 border-b text-center">{{ selectedUser.username }}</h1>
                <div id="message-list" class="flex-1 overflow-auto p-5 space-y-5">
                    {% for message in messages %}
                        <div class="message-item py-2 px-6 rounded-lg max-w-lg {% if message.sender == selectedUser.username %}ml-auto bg-blue-400 text-white animate__animated animate__fadeInRight{% else %}mr-auto bg-gray-100 text-gray-800 animate__animated animate__fadeInLeft{% endif %}">
                            <div class="font-semibold">{{ message.sender }}</div>
                            <div>{{ message.content }}</div>
                        </div>
                    {% endfor %}
                </div>

                <form class="border-t py-4 px-6" action="" method="post">
                    {{ form_start(messageForm) }}
                    <div class="flex space-x-2">
                        {{ form_row(messageForm.content, {'attr': {'class': 'form-input flex-1 rounded-lg py-2 px-3'}}) }}
                        <button type="submit" class="px-5 py-2 bg-blue-500 text-white rounded-lg">Send</button>
                    </div>
                    {{ form_end(messageForm) }}
                </form>
            </div>
        {% endif %}
    </div>
{% endblock %}

{% block javascripts %}
    {% if selectedUser %}
        <script>
            function fetchUpdates() {
                console.log(selectedUser);
                // Fetch updates from the server using an AJAX request
                fetch("{{ path('fetch_dialog_updates', { 'id': selectedUser ? selectedUser.id : null }) }}")
                    .then(response => response.json())
                    .then(data => {
                        // Handle the received data and update the UI
                        const messageList = document.getElementById('message-list');
                        messageList.innerHTML = ''; // Clear existing messages
                        data.forEach(message => {
                            const newMessage = document.createElement('div');
                            newMessage.classList.add('message-item', 'py-2', 'px-6', 'rounded-lg', 'max-w-lg');
                            if (message.sender === '{{ selectedUser.username }}') {
                                newMessage.classList.add('ml-auto', 'bg-blue-400', 'text-white', 'animate__animated', 'animate__fadeInRight');
                            } else {
                                newMessage.classList.add('mr-auto', 'bg-gray-100', 'text-gray-800', 'animate__animated', 'animate__fadeInLeft');
                            }
                            newMessage.innerHTML = `<div class="font-semibold">${message.sender}</div><div>${message.content}</div>`;
                            messageList.appendChild(newMessage);
                        });
                    })
                    .catch(error => console.error('Error fetching updates:', error));
            }

            // Fetch updates immediately when the page loads
            fetchUpdates();

            // Fetch updates every 5 seconds (adjust this interval as needed)
            setInterval(fetchUpdates, 500);
        </script>
        {#   Mercure logic     #}
        {#        <script>#}
        {#            const dialogId = {{ id|json_encode|raw }};#}

        {#            // Subscribe to the Mercure hub for real-time updates#}
        {#            const eventSource = new EventSource("{{ mercure('/dialog/' ~ id)|escape('js') }}");#}

        {#            // Handle incoming messages#}
        {#            eventSource.onmessage = function(event) {#}
        {#                console.log('jopa')#}
        {#                const data = JSON.parse(event.data);#}
        {#                // Update the UI with the new message#}
        {#                const messageList = document.getElementById('message-list');#}
        {#                const newMessage = document.createElement('li');#}
        {#                newMessage.innerHTML = `<strong>${data.sender.username}</strong>: ${data.content}`;#}
        {#                messageList.appendChild(newMessage);#}
        {#            };#}
        {#        </script>#}
    {% endif %}
{% endblock %}
